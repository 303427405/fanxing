<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<!-- 注解驱动 -->
	<mvc:annotation-driven />

	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- spring aop config proxy-target-class="true" -->

	<aop:aspectj-autoproxy />

	<!-- 扫描包 -->
	<context:component-scan base-package="com.fxkj.**.controller">
	</context:component-scan>

	<!-- 基于注解 配置多请求数据类型，返回json xml 等 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!--输出对象转JSON支持 -->
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list> 
					</property>
				</bean>
				<!--启动Spring MVC的注解功能,设置编码方式，防止乱码 -->
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<!--可以增加其他数据类型,请参考spring的API -->
			</list>
		</property>
	</bean>
	<!-- 委托多个视图，根据请求内容匹配 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultContentType" value="text/html;charset=UTF-8" />
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=UTF-8" />
				<entry key="pdf" value="application/pdf" />
				<entry key="xsl" value="application/vnd.ms-excel" />
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json;charset=UTF-8" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- com.fxkj.core.common.MappingJacksonJsonViewExd -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="contentType" value="application/json;charset=utf-8" />
				</bean>
				<!-- 输出为xml数据 -->
				<bean id="marshallingView"
					class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="autodetectAnnotations" value="true" />
						</bean>
					</property>
					<property name="contentType" value="application/xml" />
				</bean>
			</list>
		</property>
	</bean>
	<!-- 匹配视图 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 支持jstl标签 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   		<!--<property name="defaultEncoding" value="utf-8"></property> 
   		 <property name="maxUploadSize" value="10485760000"></property>
   		  指定所上传文件的总大小不能超过800KB......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和 
   		<property name="maxInMemorySize" value="40960"></property> -->
     </bean>
	
	
	<!-- 总错误处理 异常解析器 <value>forward:/error.jsp</value>   CustomSimpleMappingExceptionResolver-->
	<!-- org.springframework.web.servlet.handler.SimpleMappingExceptionResolver 系统全局异常 支持jsp   
	     com.fxkj.core.exception.CustomSimpleMappingExceptionResolver 自定义系统全局异常 支持jsp ajax-->
	<bean id="exceptionResolver"
		class="com.fxkj.core.exception.CustomSimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="page/common/500" />
		<property name="defaultStatusCode" value="500" />
		<property name="statusCodes">
			<props>
				<prop key="errors/500">500</prop>
				<prop key="errors/404">404</prop>
				<prop key="errors/405">405</prop>
			</props>
		</property>
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="com.ibatis.common.jdbc.exception.NestedSQLException">page/common/500</prop>
				<prop key="com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException">page/common/500</prop>
				<prop key="org.springframework.jdbc.BadSqlGrammarException">page/common/500</prop>
				
				<prop key="java.lang.NullPointerException">page/common/500</prop>
				<prop key="java.sql.SQLException">page/common/500</prop>
				<prop key="java.lang.RuntimeException">page/common/500</prop>
				<!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到-->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">page/common/500</prop>
			</props>
		</property>
		<!-- Spring MVC全局异常记录到日记中 设置日志输出级别，不定义则默认不输出警告等错误日志信息 (warn) -->
		<property name="warnLogCategory" value="debug" />
	</bean>

</beans>